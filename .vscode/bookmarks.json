{
	"files": [
		{
			"path": "nerfstudio/data/datamanagers/base_datamanager.py",
			"bookmarks": [
				{
					"line": 436,
					"column": 54,
					"label": "Datamanager all in once: create train set and call next_train"
				},
				{
					"line": 500,
					"column": 73,
					"label": "Camera optimizer is setup here."
				},
				{
					"line": 558,
					"column": 12,
					"label": "Next train base implementation"
				},
				{
					"line": 564,
					"column": 38,
					"label": "Generate ray bundles and refine pose"
				}
			]
		},
		{
			"path": "nerfstudio/model_components/ray_generators.py",
			"bookmarks": [
				{
					"line": 56,
					"column": 44,
					"label": "Ray generator"
				}
			]
		},
		{
			"path": "nerfstudio/pipelines/base_pipeline.py",
			"bookmarks": [
				{
					"line": 142,
					"column": 45,
					"label": "Get metrics dict and pass batch in"
				},
				{
					"line": 381,
					"column": 16,
					"label": "Pipeline loader, pose_adjustment skipped"
				}
			]
		},
		{
			"path": "scripts/process_data.py",
			"bookmarks": [
				{
					"line": 220,
					"column": 35,
					"label": "Process data colmap call"
				}
			]
		},
		{
			"path": "nerfstudio/process_data/colmap_utils.py",
			"bookmarks": [
				{
					"line": 91,
					"column": 8,
					"label": "COLMAP utilities"
				},
				{
					"line": 482,
					"column": 14,
					"label": "Output depth image"
				}
			]
		},
		{
			"path": "nerfstudio/data/pixel_samplers.py",
			"bookmarks": [
				{
					"line": 94,
					"column": 35,
					"label": "Pixel sampler"
				},
				{
					"line": 215,
					"column": 13,
					"label": "Base pixel sampler"
				}
			]
		},
		{
			"path": "nerfstudio/models/depth_nerfacto.py",
			"bookmarks": [
				{
					"line": 83,
					"column": 24,
					"label": "depth NeRFacto metric getting"
				}
			]
		},
		{
			"path": "nerfstudio/data/datasets/depth_dataset.py",
			"bookmarks": [
				{
					"line": 50,
					"column": 33,
					"label": "Scaling factor"
				},
				{
					"line": 51,
					"column": 47,
					"label": "Depth dataset load depth image"
				}
			]
		},
		{
			"path": "nerfstudio/data/dataparsers/nerfstudio_dataparser.py",
			"bookmarks": [
				{
					"line": 38,
					"column": 9,
					"label": "Max auto resolution"
				},
				{
					"line": 61,
					"column": 11,
					"label": "Train split fraction could be disabled"
				},
				{
					"line": 114,
					"column": 34,
					"label": "File path"
				},
				{
					"line": 249,
					"column": 35,
					"label": "Where the scaling factor comes from"
				}
			]
		},
		{
			"path": "nerfstudio/models/nerfacto.py",
			"bookmarks": [
				{
					"line": 256,
					"column": 56,
					"label": "Metrics for nerfacto"
				},
				{
					"line": 324,
					"column": 31,
					"label": "Render RGB"
				}
			]
		},
		{
			"path": "nerfstudio/configs/method_configs.py",
			"bookmarks": [
				{
					"line": 152,
					"column": 45,
					"label": "what is RAdam"
				}
			]
		},
		{
			"path": "nerfstudio/data/datamanagers/depth_datamanager.py",
			"bookmarks": [
				{
					"line": 44,
					"column": 20,
					"label": "Create evaluation dataset should be disabled"
				}
			]
		},
		{
			"path": "nerfstudio/data/datasets/base_dataset.py",
			"bookmarks": [
				{
					"line": 55,
					"column": 20,
					"label": "get numpy images"
				},
				{
					"line": 56,
					"column": 39,
					"label": "image_idx is used here"
				}
			]
		},
		{
			"path": "nerfstudio/data/dataparsers/base_dataparser.py",
			"bookmarks": [
				{
					"line": 163,
					"column": 25,
					"label": "Transform back to original space"
				}
			]
		},
		{
			"path": "nerfstudio/cameras/rays.py",
			"bookmarks": [
				{
					"line": 169,
					"column": 15,
					"label": "Raybundle near far"
				}
			]
		},
		{
			"path": "nerfstudio/models/base_model.py",
			"bookmarks": [
				{
					"line": 137,
					"column": 38,
					"label": "Generate ray bundle and collide with collider"
				}
			]
		},
		{
			"path": "nerfstudio/fields/nerfacto_field.py",
			"bookmarks": [
				{
					"line": 267,
					"column": 28,
					"label": "Appearance embedding and transient embedding calculation"
				}
			]
		}
	]
}